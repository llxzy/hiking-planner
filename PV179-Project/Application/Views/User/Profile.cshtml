@using DataAccessLayer.Enums
@model Application.Models.UserModels.UserModel

<link rel="stylesheet" href="~/css/custom.css" />

@{
    ViewData["Title"] = "Profile";
}

<h1>@Model.Name</h1>
<div>
    @if (User.Identity.IsAuthenticated && (int.Parse(User.Identity.Name) == Model.Id || User.IsInRole("Administrator")))
    {
        <button class="trip-detail-button">
            Edit
        </button>
    
        using (Html.BeginForm("Delete", "User", new {id = Model.Id}))
        {
            <input type="submit" value="Delete" class="btn btn-primary"/>
        }
    }
    @if (User.IsInRole("Administrator"))
    {
        if (Model.Role == UserRole.RegularUser)
        {
            using (Html.BeginForm("ChangeRights", "Admin", new {id = Model.Id, makeMod = true}))
            {
                <input type="submit" value="Make moderator" class="btn btn-primary"/>
            }
        }
        else
        {
            using (Html.BeginForm("ChangeRights", "Admin", new {id = Model.Id, makeMod = false} ) )
            {
                <input type="submit" value="Remove moderator status" class="btn btn-primary"/>
            }
        }
    }
</div>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MailAddress)
        </dt>
        <dt class="col-sm-10">
            @Html.DisplayFor(model => model.MailAddress)
        </dt>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Role)
        </dt>
        <dt class="col-sm-10">
            <!--@Html.DisplayFor(model => model.Role)-->
            @Utils.UserRoleToString(Model.Role)
        </dt>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Challenges)
        </dt>
    </dl>

    <h2 class="trip-subheader">
        Active challenges (@Model.Challenges.Where(a => a.Finished == false).Count()):
    </h2>

    @{
        var yearly = Model.Challenges.Where(c => c.Type == ChallengeType.Yearly);
        var monthly = Model.Challenges.Where(c => c.Type == ChallengeType.Monthly);
        var weekly = Model.Challenges.Where(c => c.Type == ChallengeType.Weekly);
        @if (yearly.Count() > 0)
        {
            <div class="tp-div" style="margin:5px">

                <h3 class="tp-title">Year challenges</h3>
                @foreach (var c in yearly)
                {
                    <p class="tp-description">
                        @c.StartDate.Date.ToShortDateString() /
                        Trip goal: @c.TripCount /
                        =
                    </p>
                }
            </div>
        }

        @if (monthly.Count() > 0)
        {
            <div class="tp-div" style="margin:5px">
                <h3 class="tp-title">Month challenges</h3>
                @foreach (var c in monthly)
                {
                    <p class="tp-description">
                        Start date: @c.StartDate.Date.ToShortDateString(),
                        Trip goal: @c.TripCount
                    </p>
                }
            </div>
        }

        @if (weekly.Count() > 0)
        {
            <div class="tp-div" style="margin:5px">
                <h3 class="tp-title">Weekly challenges</h3>
                @foreach (var c in weekly)
                {
                    <p class="tp-description">
                        Start date: @c.StartDate.Date.ToShortDateString(),
                        Trip goal: @c.TripCount
                    </p>
                }
            </div>
        }
    }

    <br />

    <a class="create-button" asp-area="" asp-controller="Challenge" asp-action="CreateChallenge">
        <strong>+ Create new challenge</strong>
    </a>

    <br />
    <br />

    <h2 class="trip-subheader">@Html.DisplayNameFor(model => model.Trips)</h2>
    @{
        foreach (var trip in Model.Trips)
        {
            using (Html.BeginForm("TripDetail", "Trip", trip.Trip.Id, FormMethod.Post, null, htmlAttributes: new { @class = "trip-preview tp-form" }))
            {
                <a href="@Url.Action("TripDetail","Trip", new { tripId = trip.Trip.Id })" class="trip-preview trip-redirect-a">
                    <div class="trip-preview tp-div">
                        <h3 class="trip-preview tp-title">
                            @trip.Trip.Title
                        </h3>
                        <p class="trip-preview tp-date">
                            @trip.Trip.StartDate
                        </p>
                        <p class="trip-preview tp-description">
                            @trip.Trip.Description
                        </p>
                    </div>
                </a>
            }
        }
    }
</div>