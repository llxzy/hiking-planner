@using DataAccessLayer.Enums
@model Application.Models.UserModels.UserModel

<link rel="stylesheet" href="~/css/custom.css" />

@{
    ViewData["Title"] = "Profile";
}

<h1>@Model.Name</h1>
<div>
    @if (User.Identity.IsAuthenticated && (int.Parse(User.Identity.Name) == Model.Id || User.IsInRole("Administrator")))
    {
        <button class="trip-detail-button">
            Edit
        </button>
    
        using (Html.BeginForm("Delete", "User", new {id = Model.Id}))
        {
            <input type="submit" value="Delete" class="btn btn-primary"/>
        }
    }
    @if (User.IsInRole("Administrator"))
    {
        if (Model.Role == UserRole.RegularUser)
        {
            using (Html.BeginForm("ChangeRights", "Admin", new {id = Model.Id, makeMod = true}))
            {
                <input type="submit" value="Make moderator" class="btn btn-primary"/>
            }
        }
        else
        {
            using (Html.BeginForm("ChangeRights", "Admin", new {id = Model.Id, makeMod = false} ) )
            {
                <input type="submit" value="Remove moderator status" class="btn btn-primary"/>
            }
        }
    }
</div>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MailAddress)
        </dt>
        <dt class="col-sm-10">
            @Html.DisplayFor(model => model.MailAddress)
        </dt>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Role)
        </dt>
        <dt class="col-sm-10">
            @Html.DisplayFor(model => model.Role)
        </dt>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Challenges)
        </dt>
        <ol type="1">
            @{
                @Model.Challenges.Count()
                foreach (var c in Model.Challenges)
                {
                    <li class="challenge-info">
                        @c.StartDate
                    </li>
                }
            }
        </ol>

    </dl>

<h2 class="trip-subheader">@Html.DisplayNameFor(model => model.Trips)</h2>
@{
    foreach (var trip in Model.Trips)
    {
        //using (Html.BeginForm("TripDetail", "Trip", new { tripId = trip.Trip.Id }, FormMethod.Post, null, htmlAttributes: new { @class = "trip-preview tp-form" }))
        using (Html.BeginForm("TripDetail", "Trip"))
        {
            <a href="@Url.Action("TripDetail","Trip", new { tripId = trip.Trip.Id })" class="trip-preview trip-redirect-a">
                <div class="trip-preview tp-div">
                    <h3 class="trip-preview tp-title">
                        @trip.Trip.Title
                    </h3>
                    <p class="trip-preview tp-date">
                        @trip.Trip.StartDate
                    </p>
                    <p class="trip-preview tp-description">
                        @trip.Trip.Description
                    </p>
                </div>
            </a>
        }
    }
}
</div>